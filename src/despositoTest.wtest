import bicis.*
import accesorios.*
import deposito.*

describe "testDeDespositos" {
	const canastoBici2 = new Canasto(volumen=8)
	const morralBici2 = new MorralDeBici(largo=21, ojoDeGato=true)
	const morralBici3 = new MorralDeBici(largo=6, ojoDeGato=false)
	const bici1 = new Bicis(rodado = 28, largo = 150, marca = "Olmo", accesorios = [ farolito ])
	const bici2 = new Bicis(rodado = 26, largo = 110, marca = "Legnano", accesorios = [ farolito, canastoBici2, morralBici2 ])
	const bici3 = new Bicis(rodado = 20, largo = 90, marca = "Legnano", accesorios = [ morralBici3 ])
	const bici4 = new Bicis(rodado = 28, largo = 145, marca = "Olmo", accesorios = [ farolito ])
	
	const deposito1 = new Deposito(bicis= [bici1, bici2, bici3])
	const deposito2 = new Deposito(bicis= [bici1, bici2])
	const deposito3 = new Deposito(bicis= [bici1, bici2, bici4])
	
	test "testDesposito1" {
		assert.equals([bici1, bici2], deposito1.bicisRapidas())
		assert.equals(#{"Olmo", "Legnano"}, deposito1.marcas())
		assert.notThat(deposito1.esNocturno())
		assert.that(deposito1.tieneBiciParaLlevar(10))
		assert.notThat(deposito1.tieneBiciParaLlevar(50))
	}
	test "testDesposito2" {
		assert.equals([bici1, bici2], deposito2.bicisRapidas())
		assert.equals(#{"Olmo", "Legnano"}, deposito2.marcas())
		assert.that(deposito2.esNocturno())
		assert.that(deposito2.tieneBiciParaLlevar(10))
		assert.notThat(deposito2.tieneBiciParaLlevar(50))
	}
	
	test "biciCompaniera" {
		assert.equals([bici1], deposito3.bicisCompanierasDe(bici4))
	}
}